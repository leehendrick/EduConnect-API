// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user_typs {
  id     Int      @id @default(autoincrement())
  type   String
  users  users[]
  alunos alunos[]
}

model user_status {
  id     Int      @id @default(autoincrement())
  status String
  users  users[]
  alunos alunos[]
}

model addresses {
  id        Int     @id @default(autoincrement())
  bairro    String
  distrito  String
  municipio String
  users     users[]
}

model users {
  id              Int                @id @default(autoincrement())
  nome            String             @unique
  email           String             @unique
  telefone        Int?
  senha           String
  genero          String?
  data_registro   DateTime           @default(now())
  type            user_typs          @relation(fields: [user_typsId], references: [id])
  user_typsId     Int
  status          user_status        @relation(fields: [user_statusId], references: [id])
  user_statusId   Int
  address         addresses          @relation(fields: [addressesId], references: [id])
  addressesId     Int
  inscricao_aluno inscricao_alunos[]
  alunos          alunos[]
}

model cursos {
  id              Int                @id @default(autoincrement())
  nome            String             @unique
  status          String
  descricao       String?
  requisitos      String?
  inscricao_aluno inscricao_alunos[]
  alunos          alunos[]
}

model inscricao_status {
  id              Int                @id @default(autoincrement())
  nome            String
  inscricao_aluno inscricao_alunos[]
}

model inscricao_alunos {
  id              Int              @id @default(autoincrement())
  nome            String
  bi              String
  data_nascimento DateTime
  observacao      String
  uuid            String?
  curso           cursos           @relation(fields: [cursosId], references: [id])
  cursosId        Int
  encarregado     users            @relation(fields: [encarregadoId], references: [id])
  status          inscricao_status @relation(fields: [statusId], references: [id])
  data_inscricao  DateTime         @default(now())
  encarregadoId   Int
  statusId        Int
}

model alunos {
  id            Int         @id @default(autoincrement())
  nome          String      @unique
  email         String?     @unique
  senha         String
  matricula     String      @unique
  classe        String
  turma         String
  sala          Int
  curso         cursos      @relation(fields: [cursosId], references: [id])
  status        user_status @relation(fields: [user_statusId], references: [id])
  user_statusId Int
  type          user_typs   @relation(fields: [user_typsId], references: [id])
  user_typsId   Int
  encarregado   users       @relation(fields: [usersId], references: [id])
  usersId       Int
  cursosId      Int
}
